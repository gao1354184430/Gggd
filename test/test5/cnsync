#!/bin/bash
#远端文件储存地址
Github="https://ghproxy.net/https://raw.githubusercontent.com/gao1354184430/Gggd/master/test/test6"
#brook/vnet/gost本地文件位置
brook_Conf="/usr/local/brook-pf/brook.conf"
vnet_Conf="/usr/local/vnet/client.conf"
gost_Conf="/etc/gost/config.json"
nginx_Conf="/usr/local/nginx/mjnginx.conf"
#是否开启监控
rm -rf /root/.crontab.txt
curl -s $Github/crontab > /root/.crontab.txt
github_cron=`sed -n '1p' /root/.crontab.txt`
#测试与GitHub连通性
rm -rf /root/.test.txt
curl -s $Github/test > /root/.test.txt
github_test=`sed -n '1p' /root/.test.txt`
rm -rf /root/.test.txt /root/.crontab.txt
#从远端更新
function Restart_brook(){
	rm -rf $brook_Conf.back
	cp $brook_Conf $brook_Conf.back
	rm -rf $brook_Conf
	wget $Github/brook.conf -O $brook_Conf
    PID=$(ps -ef| grep "brook relays"| grep -v grep| grep -v ".sh"| grep -v "init.d"| grep -v "service"| awk '{print $2}')
    [[ ! -z ${PID} ]] && /etc/init.d/brook-pf stop
    /etc/init.d/brook-pf start > /dev/null 2>&1 
}
function Restart_vnetc(){
	rm -rf $vnet_Conf.back
	cp $vnet_Conf $vnet_Conf.back
	rm -rf $vnet_Conf
	wget $Github/client.conf -O $vnet_Conf
	chmod +x $vnet_Conf
	systemctl restart vnetc
	systemctl status vnetc
}
function Restart_gost(){
	rm -rf $gost_Conf.back
	cp $gost_Conf $gost_Conf.back
	rm -rf $gost_Conf
	wget $Github/config.json -O $gost_Conf
    systemctl restart gost
	systemctl status gost
}
function Restart_nginx(){
	rm -rf $nginx_Conf.back
	cp $nginx_Conf $nginx_Conf.back
	rm -rf $nginx_Conf
	wget $Github/mjnginx.conf -O $nginx_Conf
    systemctl restart nginx
	systemctl status nginx
	/etc/init.d/nginx restart
}
function crontab_all(){
if [[ $github_test == "success" ]] && [[ $github_cron == "true" ]]; then
	#brook监控(暂不启用，需将brook中的动态域名清除，否则将重复同步)
	rm -rf $brook_Conf.new 
	wget $Github/brook.conf -O $brook_Conf.new
	brook_md5=`md5sum $brook_Conf  | cut -d ' ' -f1`
	brook_md5_n=`md5sum $brook_Conf.new  | cut -d ' ' -f1`
	#注释结束
	#vnet监控
	rm -rf $vnet_Conf.new
	wget $Github/client.conf -O $vnet_Conf.new
	vnet_md5=`md5sum $vnet_Conf  | cut -d ' ' -f1`
	vnet_md5_n=`md5sum $vnet_Conf.new  | cut -d ' ' -f1`
	#gost监控
	rm -rf $gost_Conf.new
	wget $Github/config.json -O $gost_Conf.new
	gost_md5=`md5sum $gost_Conf  | cut -d ' ' -f1`
	gost_md5_n=`md5sum $gost_Conf.new  | cut -d ' ' -f1`	
	#nginx监控
	rm -rf $nginx_Conf.new
	wget $Github/mjnginx.conf -O $nginx_Conf.new
	nginx_md5=`md5sum $nginx_Conf  | cut -d ' ' -f1`
	nginx_md5_n=`md5sum $nginx_Conf.new  | cut -d ' ' -f1`	
	#检查与远端是否相符
	if [[ $vnet_md5 != $vnet_md5_n ]]; then
		echo "vnet与远端文件不符，正在同步"
		rm -rf $vnet_Conf
		mv $vnet_Conf.new $vnet_Conf
		chmod +x $vnet_Conf
		systemctl restart vnetc
		echo -e "\033[32m vnet文件已更新，同步完成 \033[0m"
	elif [[ $gost_md5 != $gost_md5_n ]]; then
		echo "gost与远端文件不符，正在同步"
		rm -rf $gost_Conf
		mv $gost_Conf.new $gost_Conf
		systemctl restart gost
		echo -e "\033[32m gost文件已更新，同步完成 \033[0m"
	elif [[ $nginx_md5 != $nginx_md5_n ]]; then
		echo "Nginx与远端文件不符，正在同步"
		rm -rf $nginx_Conf
		mv $nginx_Conf.new $nginx_Conf
		systemctl restart nginx
		/etc/init.d/nginx restart
		echo -e "\033[32m Nginx文件已更新，同步完成 \033[0m"
	#elif [[ $brook_md5 != $brook_md5_n ]]; then
	#	echo "brook与远端文件不符，正在同步"
	#	rm -rf $brook_Conf
	#	mv $brook_Conf.new $brook_Conf
	#	PID=$(ps -ef| grep "brook relays"| grep -v grep| grep -v ".sh"| grep -v "init.d"| grep -v "service"| awk '{print $2}')
	#	[[ ! -z ${PID} ]] && /etc/init.d/brook-pf stop
	#	/etc/init.d/brook-pf start > /dev/null 2>&1 
	#	echo -e "\033[32m brook文件已更新，同步完成 \033[0m"
	else
		echo "所有文件与远端相符，无需同步"
	fi
else
	echo "通信中断或已关闭同步，请手动操作"
fi
}
action=$1
if [[ -n $action ]]; then
#增加一个通信检测，如果与GitHub通信失败则停止脚本
if [[ $github_test == "success" ]]; then
if [[ $action == "brook" ]]; then
    Restart_brook
	echo -e "\033[32m brook文件已更新 \033[0m"
  elif [[ $action == "vnet" ]]; then
    Restart_vnetc
    echo -e "\033[32m vnet文件已更新 \033[0m"
  elif [[ $action == "gost" ]]; then
    Restart_gost
    echo -e "\033[32m gost文件已更新 \033[0m"
  elif [[ $action == "nginx" ]]; then
    Restart_nginx
    echo -e "\033[32m nginx文件已更新 \033[0m"
  elif [[ $action == "all" ]]; then
    Restart_brook
    Restart_vnetc
    Restart_gost
	Restart_nginx
    echo -e "\033[32m brook/vnet/gost文件已更新 \033[0m"
  elif [[ $action == "cron" ]]; then
	crontab_all

  fi
else
	echo -e "\033[31m 远端通信失败，程序中止 \033[0m"
fi
else
 	echo -e "通信：\033[32m $github_test \033[0m"
	echo -e "同步：\033[32m $github_cron \033[0m"
	echo -e "请输入\033[32m cnsync vnet|brook|gost|nginx|all|cron\033[0m 来执行同步操作" 
fi
