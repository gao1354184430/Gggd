#!/bin/bash
#远端文件储存地址
Github="https://raw.githubusercontent.com/gao1354184430/Gggd/master/test/test6"
GostService="https://raw.githubusercontent.com/KANIKIG/Multi-EasyGost/master"
#gost指定版本
ct_new_ver="2.11.1"
#测试与GitHub连通性
rm -rf /root/.test.txt
curl -s $Github/test > /root/.test.txt
github_test=`sed -n '1p' /root/.test.txt`
rm -rf /root/.test.txt /root/.crontab.txt
#开放防火墙
function install_iptables(){
systemctl stop firewalld
systemctl mask firewalld
yum install -y iptables
yum install iptables-services -y
iptables -F
iptables -P INPUT ACCEPT
iptables -X
service iptables save
}
#安装vnets
function install_vnets(){
	yum -y install zip unzip vim
    mkdir /usr/local/vnet
    cd /usr/local/vnet
    wget -N --no-check-certificate "https://www.isyunyi.com/download/linux/tunnel.zip"
    unzip tunnel.zip 
    rm -f /usr/local/vnet/tunnel.zip
    rm -f /usr/local/vnet/client
    echo '#!/bin/bash
sleep 0.5
cd /usr/local/vnet
./server' >/usr/local/vnet/server.sh  
	rm -rf /usr/local/vnet/server.conf
	wget -N --no-check-certificate $Github/node/$diQu/server.conf -O /usr/local/vnet/server.conf
    chmod +x /usr/local/vnet/server /usr/local/vnet/server.sh /usr/local/vnet/server.conf
	echo '
[Unit]
Description=VnetServer.Service
After=rc-local.service network.target
[Service]
Type=simple
ExecStart=/usr/local/vnet/server.sh
ExecStartPost=/usr/local/vnet/server.conf
Restart=always
LimitNOFILE=512000
LimitNPROC=512000
[Install]
WantedBy=multi-user.target' >/usr/lib/systemd/system/vnets.service
	systemctl start vnets
	systemctl status vnets
	systemctl enable vnets
	echo -e "\033[42;37mvnet服务端安装完成\033[0m" 
}
#安装docker
function install_docker(){
wget -qO- get.docker.com | bash
systemctl start docker
systemctl enable docker
systemctl status docker
sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
rm -rf /root/docker.run
wget --no-check-certificate $Github/node/$diQu/docker -O /root/docker.run
chmod +x /root/docker.run
/root/docker.run
}
#安装gost
function Install_gost() {
	bit="amd64"
	yum install -y gzip
    rm -rf /root/gost-linux-"$bit"-"$ct_new_ver".gz
    wget --no-check-certificate https://github.com/ginuerzh/gost/releases/download/v$ct_new_ver/gost-linux-$bit-$ct_new_ver.gz -O /root/gost-linux-$bit-$ct_new_ver.gz
    gunzip /root/gost-linux-"$bit"-"$ct_new_ver".gz
    mv /root/gost-linux-"$bit"-"$ct_new_ver" /usr/bin/gost
    chmod -R 777 /usr/bin/gost
    wget --no-check-certificate $GostService/gost.service && chmod -R 777 gost.service && mv gost.service /usr/lib/systemd/system
	rm -rf /etc/gost/config.json
    mkdir /etc/gost && wget --no-check-certificate $Github/node/$diQu/config.json && mv config.json /etc/gost && chmod -R 777 /etc/gost
	systemctl enable gost && systemctl restart gost
	echo "------------------------------"
if test -a /usr/bin/gost -a /usr/lib/systemctl/gost.service -a /etc/gost/config.json; then
    echo "gost安装成功"
    rm -rf "$(pwd)"/gost
    rm -rf "$(pwd)"/gost.service
    rm -rf "$(pwd)"/config.json
else
    echo "gost没有安装成功，可以在Github[EasyGost]中提交issue"
    rm -rf "$(pwd)"/gost
    rm -rf "$(pwd)"/gost.service
    rm -rf "$(pwd)"/config.json
    rm -rf "$(pwd)"/gost.sh
fi
}
#菜单选项
menu_server() {
  echo && echo -e "  月抛/正常鸡 一键安装docker/vnet/gost
  支持一键安装并从远端下发配置-直接黑化
 ————————————
 ${Green_font_prefix} tw:${Font_color_suffix} 安装至台湾机器
 ${Green_font_prefix} jp:${Font_color_suffix} 安装至日本机器
————————————
 ${Green_font_prefix} 3.${Font_color_suffix} 安装脚本" &&echo 
	echo -e "输入\033[32m tw\033[0m|\033[32m jp\033[0m来进行安装" 
  echo
  read -erp " 请输入国家地区代码:" diQu
	yum update -y
	install_iptables
	install_vnets
	Install_gost
	install_docker
}
action=$1
if [[ -n $action ]]; then
#增加一个通信检测，如果与GitHub通信失败则停止脚本
if [[ $github_test == "success" ]]; then
if [[ $action == "sync" ]]; then
    Restart_haproxy
	echo -e "\033[32m haproxy文件已更新 \033[0m"
  elif [[ $action == "cron" ]]; then
    haproxy_cron
    echo -e "\033[32m haproxy文件已更新 \033[0m"
  elif [[ $action == "install" ]]; then
    install_haproxy
    echo -e "\033[32m haproxy文件已更新 \033[0m"
  fi
else
	echo -e "\033[31m 远端通信失败，程序中止 \033[0m"
fi
else
	menu_server
fi
